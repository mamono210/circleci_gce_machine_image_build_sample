version: 2.1

executors:
  packer:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors/ansible:latest
    resource_class: small

orbs:
  gcp-cli: circleci/gcp-cli@3.1.0

jobs:
  packer:
    executor: packer
    parameters:
      boot-disk-size:
        type: string
      image-family:
        type: string
      image-project:
        type: string
      instance-name:
        type: string
      machine-type:
        default: n1-standard-1
        type: string
      machine-image-name:
        type: string
      project-name:
        type: string
      service-account:
        type: string
      zone:
        type: string
    steps:
      - checkout
      - gcp-cli/setup
      - run:
          name: Set environment variables to create unique resources
          command: |
            # 一意のリソースを作成するためにタイムスタンプを利用して変数を設定する
            TIMESTAMP=$(date --date "9 hours" "+%Y%m%d-%H%M%S")
            echo "export INSTANCE_NAME=<< parameters.instance-name>>-${TIMESTAMP}" >> $BASH_ENV
            echo "export MACHINE_IMAGE_NAME=<< parameters.machine-image-name >>-${TIMESTAMP}" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Create instance
          command: |
            # Ansible を実行する対象のインスタンスを Ansible 実行前に起動しておく
            gcloud compute instances create ${INSTANCE_NAME} \
              --project=<< parameters.project-name >> \
              --zone=<< parameters.zone >> \
              --image-project=<< parameters.image-project >> \
              --image-family=<< parameters.image-family >> \
              --machine-type=<< parameters.machine-type >> \
              --boot-disk-size=<< parameters.boot-disk-size >> \
              --network-interface=network-tier=PREMIUM,stack-type=IPV4_ONLY,subnet=default \
              --maintenance-policy=MIGRATE \
              --provisioning-model=STANDARD \
              --service-account=<< parameters.service-account >> \
              --scopes=https://www.googleapis.com/auth/compute,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/trace.append,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/devstorage.read_only \
              --no-shielded-secure-boot \
              --shielded-vtpm \
              --shielded-integrity-monitoring \
              --reservation-affinity=any
      - run:
          name: Create SSH Key
          command: |
            # Ansible がインスタンスへ接続するためのSSH鍵を発行する
            gcloud compute ssh centos@${INSTANCE_NAME} \
            --command "cat /etc/redhat-release" \
            --zone=<< parameters.zone >> \
            --quiet

            # Set Strict host key checking no
            echo "StrictHostKeyChecking no" > ~/.ssh/config
      - run:
          name: Update OS
          command: |
            # ansible-playbook コマンドを実行して対象のシステムをセットアップする
            # 環境変数に ANSIBLE_FORCE_COLOR、PY_COLORS を設定すると Ansible の実行ログがカラー表示になる
            # Get external Ip addr
            ip_addr=$(
                       gcloud compute instances describe ${INSTANCE_NAME} \
                         --format='get(networkInterfaces[0].accessConfigs[0].natIP)' \
                         --zone=<< parameters.zone >> \
                     )

            # Execute Ansible playbook
            ansible-playbook -i ${ip_addr}, \
            -u centos \
            --key-file="~/.ssh/google_compute_engine" \
            update.yml
          environment:
            ANSIBLE_FORCE_COLOR: '1'
            PY_COLORS: '1'
            TZ: 'Asia/Tokyo'
      - run:
          name: Register machine image
          command: |
            gcloud beta compute machine-images create ${MACHINE_IMAGE_NAME} \
              --project=<< parameters.project-name >> \
              --source-instance=${INSTANCE_NAME} \
              --source-instance-zone=<< parameters.zone >> \
              --storage-location=us
      - run:
          name: Delete instance
          command: |
            gcloud compute instances delete ${INSTANCE_NAME} \
              --project=<< parameters.project-name >> \
              --zone=<< parameters.zone >>

workflows:
  version: 2.1
  packer:
    jobs:
      - packer:
          boot-disk-size: '40'
          context: GCLOUD
          machine-image-name: 'centos-stream-8-golden-image'
          machine-type: 'n1-standard-1'
          image-family: 'centos-stream-8'
          image-project: 'centos-cloud'
          instance-name: 'centos-stream-8-golden-image-builder'
          project-name: 'buoyant-world-263612'
          service-account: 'mamono210@buoyant-world-263612.iam.gserviceaccount.com'
          zone: 'us-central1-a'
